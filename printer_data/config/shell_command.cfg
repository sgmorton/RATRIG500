[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True

[gcode_macro HYPERLAPSE_START30]
description: Start a hyperlapse recording with a 30-second interval
gcode:
  {% set cycle = 30 %}
  {action_respond_info("Hyperlapse: started with 30-second interval")}
  SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
  SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
  UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
  TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro HYPERLAPSE_STOP]
description: Stop the hyperlapse recording
gcode:
  {% if printer["gcode_macro HYPERLAPSE"].run %}
    {action_respond_info("Hyperlapse: frames stopped")}
  {% else %}
    {action_respond_info("Hyperlapse: no recording was active")}
  {% endif %}
  SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
  UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0

[gcode_macro FILAMENT_CHANGE]
description: Homne everything then do M600
gcode:
  {action_respond_info("Homing First")}
  MAYBE_HOME
  {action_respond_info("Moving to front and unloading")}
  M600

